Readme1) For installation of Solr along with GeoTopic Parser, cTakes Parser and Tesseract OCR, please refer “Readme for Solr Installation and indexing to Solr”  and “Readme_geotopic_ctakes_OCR” in the folder “Indexing code”.2) For merging of both kind of indexing use the following command:java -cp /tmp/lucene-core-4.4.0.jar:/tmp/lucene-misc-4.4.0.jar org/apache/lucene/misc/IndexMergeTool./newindex./<your_solr_home>/<your_solr_core1>/data/index./ <your_solr_home>/<your_solr_core1>/data/index  <------------------------------ Content Based Algorithm ----------------------------------------->1) For Content Based Algorithm, refer the “contentbased_readme” in folder ContentBasedAlgorithm.2) A program is included in folder which calculates TF-IDF scoring and does a cosine similarity of the TF-IDF with query. This program was written to understand the functioning of TF-IDF.3) To use the TF-IDF scoring in solr, you just need to use the DefaultSimilarity class of lucene, which inherits the properties of TF-IDF Similarity Class of lucene.  You need to include the following code in schema.xml of the respective core order to use it:<similarity class="org.apache.lucene.search.similarities.DefaultSimilarity"/>4) For querying the index you need to execute the python script in the folder Queries in the ContentBasedAlgorithm folder. Queries folder contains multiple folders for each query which consists of python script which is used to create and execute the queries to generate queries.txt as well as out.txt.<------------------------------ Link Based Algorithm ----------------------------------------->1) For Link Based Algorithm, refer the “Linkbased_readme” in folder LinkBasedAlgorithm inside the Graph and Page rank directory. 2) The scripts to generate graphs from custom metadata fields and generate page rank is present in the scripts directory inside the “Graph and Page rank” directory. The result JSONS are present in the same directory. We have created 4 scripts for the 4 metadata fields, location, guntype, model and keywords. 3) After getting pagerank for all the documents you need to merge it with orinial index.  For doing so follow the steps below:a. Add these four fields in schema.xml of your solr core:<field name="pgrk_guntype" type="float" indexed="true" stored="true" multiValued="true"/><field name="pgrk_keywords" type="float" indexed="true" stored="true" multiValued="true"/><field name="pgrk_locations" type="float" indexed="true" stored="true" multiValued="true"/><field name="pgrk_manufacturer" type="float" indexed="true" stored="true" multiValued="true"/>a) Execute indexDatatrial2.py in order to add the merge index to solr core.4) For querying the index you need to execute the python script in the folder Queries in the LinkBasedAlgorithm folder. Queries folder contains multiple folders for each query which consists of python script which is used to create and execute the queries to generate queries.txt as well as out.txt.<------------------------------ Things to be Careful About -------------------------------------->* Do remember to change the port number and core name in all the python scripts. * Change the schema.xml of your core by referring to the schema.xml provided in folder “Indexing code” 